/*
 * Copyright (C) 2016 Maxime Schmitt
 *
 * ACR is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 *
 * \file acr_stats.h
 * \brief Runtime statistics of threads behaviour
 *
 * \defgroup runtime_stats
 *
 * @{
 * \brief Thread statistics collected during runtime
 *
 */

#if @ACR_STAT@ // Build option ACR_STAT
#ifndef __ACR_STATS_H
#define __ACR_STATS_H

#define ACR_STATS_ENABLED

#include <stdlib.h>
#include <stdio.h>
#include "acr/acr_time.h"

/**
 * \brief The index used for the stat array
 */
enum acr_thread_time_id {
  /** The monitoring thread index */
  acr_thread_time_monitor = 0,
  /** The CLooG thread index */
  acr_thread_time_cloog,
  /** The compiler thread index */
  acr_thread_time_cc,
  /** The tcc thread index */
  acr_thread_time_tcc,
  /** The size of the array */
  acr_thread_time_total,
};

/**
 * \brief Structure storing the number of measurements and the total time of
 * each threads
 */
struct acr_threads_time_stats {
  /** The nummber of measurements for each threads */
  size_t num_measurements[acr_thread_time_total];
  /** The sum of each measurements time */
  double total_time[acr_thread_time_total];
};

/**
 * \brief The simulation kernel statistics
 */
struct acr_simulation_time_stats {
  /** The number of measurements done */
  size_t num_simmulation_step;
  /** The sum of each measurements time */
  double total_time;
};

/**
 * \brief Print the statistics in a human readable form
 * \param[in,out] out The output stream
 * \param[in] prefix The function prefix
 * \param[in] sim_stats The simulation stats
 * \param[in] thread_stats The threads statistics
 */
void acr_print_stats(
    FILE *out,
    const char *prefix,
    const struct acr_simulation_time_stats *sim_stats,
    const struct acr_threads_time_stats *thread_stats,
    size_t num_gen_threads,
    size_t num_compile_threads);

#endif // __ACR_STATS_H
#endif // Build option ACR_STAT

/**
 *
 * @}
 *
 */
